"""
群聊聊天室
功能 ： 类似qq群功能
需求分析：要点-》构建出软件的基本使用方法
【1】 有人进入聊天室需要输入姓名，姓名不能重复
【2】 有人进入聊天室时，其他人会收到通知：Lucy 进入了聊天室
【3】 一个人发消息，其他人会收到： Lucy ： 一起出去玩啊。
【4】 有人退出聊天室，则其他人也会收到通知 : Lucy 退出了聊天室
【5】 扩展功能：服务器可以向所有用户发送公告: 管理员消息： 大家好，欢迎进入聊天室。
技术分析：使用的技术
    *c/s 模型
    * 数据存储在服务端--临时存储机制，姓名和address
        列表存储：[(name,address),....]
        字典存储：{name:address}
        对象存储(非常常用)：
        class Person:
            def _init_(self,name,address):
                self.name = name
                self.address = address

    * 网络通信：udp

    *消息传输机制：客户端----》服务端----》转发给其他客户端
        收发消息互不影响：多进程，一个进程负责收消息，一个负责发消息(发消息只能用父进程，子进程不能使用input)
功能模块分析：
    *整体框架设计：
        服务端：
        1.创建udp网络套接字
        2.循环接受来自客户端的请求
        3.根据请求调用不同的函数去解决

        客户端：
        1.建立网络套接字

    *进入聊天室:
        客户端：1.输入用户名；
               2.发送用户名；
               3.等待进入聊天室----》Y 进入聊天室
                                   N 重新回到第一步
        服务端：1.接受用户名；
               2.判断是否存在；
               3.存在---》告知客户端 无法进入
                 不存在---》告知客户端进入聊天室
               4.客户端进入聊天室，存储用户信息，告知其他用户
    *聊天：
        客户端：1.创建子进程，
               2.父进程循环发送消息
               3.子进程循环接受消息

        服务端：1.接受消息
              2.发送给其他客户端

    *退出聊天室

    封装：函数
通信协议设计：
    数据传输中双方做一些数据格式和含义的约定
                    请求类型        数据参量
    进入聊天室        L              name
    聊天             C              name 消息内容
    退出             E              name
模块逻辑设计：

优化完善：
*显示效果
*客户端强行退出
"""